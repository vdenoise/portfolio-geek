{
  "hash": "d11ddf0e8fad840e531a81799d936a12",
  "result": {
    "markdown": "---\ntitle: \"Obtenir la valorisation de plusieurs titres avec Python et Alpha Vantage\"\ndate: \"04/01/2023\"\ncategories: [fr, valuation, fundamental]\n---\n\n![](/pictures/stock-valuation.png)\n\n# Introduction\n\nDans cet article, nous allons vous montrer comment récupérer le Price to Earnings Ratio (PER) de plusieurs actions en utilisant Python, la librairie Alpha Vantage et la bibliothèque de visualisation de données Matplotlib. Le PER est un indicateur financier qui permet d'évaluer la valorisation d'une action.\n\n## Le Price to Earnings Ratio (\"PER\")\n\nLe Price to Earnings Ratio (PER) est un ratio financier utilisé pour évaluer la valorisation d'une action par rapport à ses bénéfices. Il est calculé en divisant le prix actuel de l'action par le bénéfice par action (EPS) sur une période donnée, généralement sur les 12 derniers mois. La formule est la suivante :\n\n$$\nPER = \\frac{Prix\\ de\\ l'action}{Bénéfice\\ par\\ action}\n$$\n\nUn PER élevé indique que les investisseurs sont prêts à payer davantage pour les bénéfices futurs de l'entreprise, tandis qu'un PER faible suggère que les investisseurs estiment que l'action est sous-évaluée ou que l'entreprise a des perspectives de croissance limitées.\n\n## La librairie Alpha Vantage\n\nAlpha Vantage est une plateforme de données financières qui fournit des API pour accéder à diverses informations sur le marché, telles que les cours des actions, les indicateurs techniques, les données sur les devises, les cryptomonnaies et bien d'autres. La librairie Python `alpha_vantage` permet d'interagir facilement avec ces API.\n\nLa licence gratuite d'Alpha Vantage permet d'accéder à la plupart des données sans frais. Toutefois, elle est soumise à certaines restrictions, notamment un nombre limité de requêtes par minute et par jour. Pour des usages plus intensifs, des plans payants sont disponibles.\n\n\n# Préparation\n\nPour utiliser yfinance afin de récupérer les valorisations des secteurs en Europe, vous pouvez suivre ces étapes :\n\n- Installez alpha_vantage : pip install alpha_vantage\n- Installez pandas : pip install pandas\n- Importez les bibliothèques nécessaires et récupérez les données des secteurs en Europe.\n\n\n## Code Source\n\nVoici un exemple de programme Python qui utilise la bibliothèque yfinance pour récupérer les valorisations des ETFs secteurs en Europe. Dans cet exemple, je vais utiliser quelques ETFs populaires en Europe pour illustrer le processus. Vous pouvez ajouter ou modifier les symboles d'ETFs dans la liste etfs pour récupérer les valorisations des ETFs que vous souhaitez.\n\n::: {.cell execution_count=1}\n``` {.python .cell-code}\nimport os, sys\nroot_path = os.path.join(sys.path[0],'..','..', '..')\nsys.path.append(root_path)\nimport blog_utils\n\ntpl_path = \"https://github.com/vdenoise/templates/raw/master\"\nmpl_tpl_path = f\"{tpl_path}/matplotlib\"\n```\n:::\n\n\n::: {.cell execution_count=2}\n``` {.python .cell-code}\n\nimport keyring\nimport matplotlib\nimport matplotlib.pyplot as plt\nfrom alpha_vantage.fundamentaldata import FundamentalData\n\n# Remplacez 'your_api_key' par votre clé API Alpha Vantage\napi_key = keyring.get_password(\"alpha_vantage_api_key\", \"email@email.com\")\nfd = FundamentalData(key=api_key)\n\n# Fonction pour récupérer le Price to Earnings Ratio (P/E Ratio)\ndef get_price_to_earnings_ratio(symbol):\n    data, _ = fd.get_company_overview(symbol)\n    pe_ratio = float(data[\"PERatio\"])\n    return pe_ratio\n\n# Récupérer et afficher les P/E Ratios\nsymbols = [\"AAPL\", \"MSFT\", \"IBM\"]\npe_ratios = [get_price_to_earnings_ratio(symbol) for symbol in symbols]\n\nmatplotlib.rcdefaults() \nblog_utils.apply_right_style()\nplt.bar(symbols, pe_ratios)\nplt.xlabel(\"Symboles\")\nplt.ylabel(\"Price to Earnings Ratio\")\nplt.title(\"Comparaison des PER de différentes actions\")\nplt.show()\n\n\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nNone\n```\n:::\n\n::: {.cell-output .cell-output-display}\n![](valorisation-pe_files/figure-html/cell-3-output-2.png){}\n:::\n:::\n\n\nNotez que les tickers d'ETFs dans etf_tickers sont des exemples. Vous devrez remplacer cette liste par les tickers des ETFs de secteurs en Europe que vous souhaitez analyser. Ce programme récupère le P/E Ratio pour chaque ETF et affiche les résultats à l'écran.\n\n## Conclusion\n\n\nEn résumé, dans cet article tres court, nous avons montré comment récupérer le Price to Earnings Ratio (PER) de plusieurs actions en utilisant Python, la librairie Alpha Vantage et la bibliothèque de visualisation de données Matplotlib. Le PER est un indicateur financier clé pour évaluer la valorisation d'une action et comparer différentes entreprises.\n\n\n## Sources de référence\n\nPour en savoir plus sur Alpha Vantage, la valorisation des actions et l'utilisation du Price to Earnings Ratio dans l'analyse financière, consultez les sources suivantes :\n\n- Site officiel d'AlphaVantage : [https://www.alphavantage.co/](https://www.alphavantage.co/)\n- Documentation de la librairie Python `alpha_vantage` : [https://alpha-vantage.readthedocs.io/](https://alpha-vantage.readthedocs.io/)\n- Investopedia, \"Price-to-Earnings Ratio – P/E Ratio\" : [https://www.investopedia.com/terms/p/price-earningsratio.asp](https://www.investopedia.com/terms/p/price-earningsratio.asp)\n- Corporate Finance Institute, \"Price Earnings Ratio (P/E Ratio)\" : [https://corporatefinanceinstitute.com/resources/knowledge/valuation/price-earnings-ratio/](https://corporatefinanceinstitute.com/resources/knowledge/valuation/price-earnings-ratio/)\n- Matplotlib, documentation officielle : [https://matplotlib.org/](https://matplotlib.org/)\n\n\n",
    "supporting": [
      "valorisation-pe_files"
    ],
    "filters": [],
    "includes": {}
  }
}