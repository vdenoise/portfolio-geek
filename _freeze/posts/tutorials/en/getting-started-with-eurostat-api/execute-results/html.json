{
  "hash": "21d885e6c5d74688460a440654afaf9d",
  "result": {
    "markdown": "---\ntitle: Getting Started with Eurostat API\ndate: \"04/15/2023\"\ncategories: [en, 101, data, api]\n---\n\n![](/pictures/api-connection-check.png)\n# Connect to Eurostat API with Python using their REST API\n\nEurostat, the statistical office of the European Union, provides access to a wealth of data on various aspects of the European economy, environment, and society. One way to access this data is through their REST API, which can be easily connected to and queried using Python.\n\nIn this article, we will walk you through the steps needed to connect to the Eurostat API using Python and build a function to show the connection status to the API. By the end, you'll be able to retrieve data from Eurostat in a structured and efficient manner.\n\n## Prerequisites\n\nBefore we begin, make sure you have Python installed on your system. You can check whether you have Python installed and which version you're using by running the following command in your terminal:\n\n```bash\npython --version\n```\n\nIf you don't have Python installed, you can download it from the official [Python website](https://www.python.org/downloads/).\n\nNext, you will need to install the `requests` library, which allows you to make HTTP requests in Python. To do this, open your terminal and run:\n\n```bash\npip install requests\n```\n\n## Connecting to the Eurostat API\n\nTo connect to the Eurostat API, you need to send HTTP requests to their API endpoints. The base URL for the Eurostat API is:\n\n```\nhttps://ec.europa.eu/eurostat/api/dissemination/sdmx/2.1/\n```\n\nYou can append the relevant endpoint to this base URL to access specific datasets or services.\n\nFor example, to access the dataset on GDP per capita, you would send a request to:\n\n```\nhttps://ec.europa.eu/eurostat/api/dissemination/sdmx/2.1/data/nama_10_pc?format=sdmx-compact-2.1\n```\n\nHere's a Python function that sends a request to the Eurostat API and checks the connection status:\n\n::: {.cell execution_count=1}\n``` {.python .cell-code}\nimport requests\n\ndef check_connection_status(endpoint):\n    response = requests.get(endpoint)\n    status_code = response.status_code\n    \n    if status_code == 200:\n        print(\"Connection Successful! (Status Code: 200)\")\n    elif status_code == 404:\n        print(\"Error: Dataset not found (Status Code: 404)\")\n    else:\n        print(f\"Error: Connection failed (Status Code: {status_code})\")\n\n# Test the function with the base URL\napi_base_url = \"https://ec.europa.eu/eurostat/api/dissemination/sdmx/2.1/sdmx-rest.wadl\"\ncheck_connection_status(api_base_url)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nConnection Successful! (Status Code: 200)\n```\n:::\n:::\n\n\nThis function sends an HTTP GET request to the specified `api_url` and checks the response's status code. If the status code is 200, the connection is successful. If the status code is anything other than 200, the connection has failed, and the function raises an exception with the corresponding error message.\n\nTo use this function, replace `api_url` with the desired Eurostat API endpoint.\n\n## Conclusion\n\nIn this article, we demonstrated how to connect to the Eurostat API using Python and their REST API. We also showed you how to create a simple function to check the connection status to the API.\n\nWith these tools in hand, you can now access a wide variety of European statistical data and use it in your data analysis or visualization projects. Happy coding!\n\n\n",
    "supporting": [
      "getting-started-with-eurostat-api_files"
    ],
    "filters": [],
    "includes": {}
  }
}